%header("##")
[DEFAULT]
## "ignoreip" can be an IP address, a CIDR mask or a DNS host
##ignoreip = 127.0.0.1
ignoreip = %(" ".join(ignoreip))
bantime  = %(bantime)
maxretry = %(maxretry)
## "backend" specifies the backend used to get files modification. Available
## options are "gamin", "polling" and "auto".
## yoh: For some reason Debian shipped python-gamin didn't work as expected
##      This issue left ToDo, so polling is default backend for now
backend = polling
## Destination email address used solely for the interpolations in
## jail.{conf,local} configuration files.
destemail = %(destemail)

## ACTIONS ##
##
## Default banning action (e.g. iptables, iptables-new,
## iptables-multiport, shorewall, etc) It is used to define 
## action_* variables. Can be overriden globally or per 
## section within jail.local file
banaction = iptables-multiport
##
## email action. Since 0.8.1 upstream fail2ban uses sendmail
## MTA for the mailing. Change mta configuration parameter to mail
## if you want to revert to conventional 'mail'.
mta = sendmail
## Default protocol
protocol = tcp

## Action shortcuts. To be used to define action parameter
##
## The simplest action to take: ban only
action_ = %%(banaction)s[name=%%(__name__)s, port="%%(port)s", protocol="%%(protocol)s]
## ban & send an e-mail with whois report to the destemail.
action_mw = %%(banaction)s[name=%%(__name__)s, port="%%(port)s", protocol="%%(protocol)s]
              %%(mta)s-whois[name=%%(__name__)s, dest="%%(destemail)s", protocol="%%(protocol)s]
## ban & send an e-mail with whois report and relevant log lines
## to the destemail.
action_mwl = %%(banaction)s[name=%%(__name__)s, port="%%(port)s", protocol="%%(protocol)s]
               %%(mta)s-whois-lines[name=%%(__name__)s, dest="%%(destemail)s", logpath=%%(logpath)s]
## Choose default action.  To change, just override value of 'action' with the
## interpolation to the chosen action shortcut (e.g.  action_mw, action_mwl, etc) in jail.local
## globally (section [DEFAULT]) or per specific section 
action = %%(action_)s

## JAILS ##
#foreach j in jail

  [%(j)]
  enabled  = %(jail[j].get("enable", "false"))
  port     = %(jail[j]["port"])
  filter   = %(jail[j]["filter"])
  #if "banaction" in jail[j]
    banaction = %(jail[j]["banaction"])
  #end
  logpath  = %("\n  ".join(jail[j]["logpath"]))
  maxretry = %(jail[j].get("maxretry", 6))
  #if "findtime" in jail[j]
    findtime = %(jail[j].get("findtime", 600))
  #end
#end

## DNS Servers
##
## These jails block attacks against named (bind9). By default, logging is off
## with bind9 installation. You will need something like this:
##
## logging {
##     channel security_file {
##         file "/var/log/named/security.log" versions 3 size 30m;
##         severity dynamic;
##         print-time yes;
##     };
##     category security {
##         security_file;
##     };
## }
##
## in your named.conf to provide proper logging
## Word of Caution:
## Given filter can lead to DoS attack against your DNS server
## since there is no way to assure that UDP packets come from the
## real source IP
