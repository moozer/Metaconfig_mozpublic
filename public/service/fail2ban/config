##
## Configuration for public/service/fail2ban
##

[apt]
install += "fail2ban"

if not (PLATFORM_OS_DEBIAN and PLATFORM_OS_DEBIAN < "6.0")
  [files]
  block += "/usr/share/fail2ban/server/datetemplate.py"
end

[settings]
destemail   = "root"

# Notes.: space separated list of IP's to be ignored by fail2ban..
# You can use CIDR mask in order to specify a range..
# Example: ignoreip = 192.168.0.1/24 123.45.235.65.
ignoreip    = []
ignoreip    += "127.0.0.0/8"

# Notes.: number of seconds an IP will be banned..
# permanent banning with bantime < 0
bantime     = "300"

# Notes.: number of retrys before IP gets banned..
maxretry    = "5"

jail = dict()
jail["ssh"] = dict(enable = 1, port = "ssh", filter = "sshd", logpath = ["/var/log/auth/current", "/var/log/auth.log"])
jail["roundcube"] = dict(enable = "false", port = "http,https", filter = "roundcube", logpath = ["/var/log/user/current", "/var/log/user.log"])
jail["dovecot"] = dict(enable = "false", port = "imaps,pop3s", filter = "dovecot", logpath = ["/var/log/mail/current", "/var/log/mail.log"])
jail["postfix-sasl"] = dict(enable = "false", port = "smtp,smtps,ssmtp", filter = "postfix-sasl", logpath = ["/var/log/mail/current", "/var/log/mail.log"])
jail["pam-generic"] = dict(enabled = "false", filter = "pam-generic", port = "all", banaction = "iptables-allports", port = "anyport", logpath = ["/var/log/auth/current", "/var/log/auth.log"])
jail["xinetd-fail"] = dict(enabled = "false", filter = "xinetd-fail", port = "all", banaction = "iptables-multiport-log", logpath = ["/var/log/daemon/current", "/var/log/daemon.log"])
jail["ssh-ddos"] = dict(enabled = "false", port = "ssh", filter = "sshd-ddos", logpath = ["/var/log/auth/current", "/var/log/auth.log"])
jail["apache"] = dict(enabled = "false", port = "http,https", filter = "apache-auth", logpath = ["/var/log/apache*/*error.log"])
jail["apache-multiport"] = dict(enabled = "false", port = "http,https", filter = "apache-auth", logpath = ["/var/log/apache*/*error.log"])
jail["apache-noscript"] = dict(enabled = "false", port = "http,https", filter = "apache-noscript", logpath = ["/var/log/apache*/*error.log"])
jail["apache-overflows"] = dict(enabled = "false", port = "http,https", filter = "apache-overflows", logpath = ["/var/log/apache*/*error.log"])
jail["vsftpd"] = dict(enabled = "false", port = "ftp,ftp-data,ftps,ftps-data", filter = "vsftpd", logpath = ["/var/log/vsftpd.log"])
jail["proftpd"] = dict(enabled = "false", port = "ftp,ftp-data,ftps,ftps-data", filter = "proftpd", logpath = ["/var/log/proftpd/proftpd.log"])
jail["wuftpd"] = dict(enabled = "false", port = "ftp,ftp-data,ftps,ftps-data", filter = "wuftpd", logpath = ["/var/log/auth/current", "/var/log/auth.log"])
jail["postfix"] = dict(enabled = "false", port = "smtp,ssmtp", filter = "postfix", logpath = ["/var/log/mail/current", "/var/log/mail.log"])
jail["couriersmtp"] = dict(enabled = "false", port = "smtp,ssmtp", filter = "couriersmtp", logpath = ["/var/log/mail/current", "/var/log/mail.log"])
jail["courierauth"] = dict(enabled = "false", port = "smtp,ssmtp,imap2,imap3,imaps,pop3,pop3s", filter = "courierlogin", logpath = ["/var/log/mail/current", "/var/log/mail.log"])
jail["sasl"] = dict(enabled = "false", port = "smtp,ssmtp,imap2,imap3,imaps,pop3,pop3s", filter = "sasl", logpath = ["/var/log/mail/current", "/var/log/mail.log"])
jail["named-refused-udp"] = dict(enabled = "false", port = "domain,953", protocol = "udp", filter = "named-refused", logpath = ["/var/log/named/security.log"])
jail["named-refused-tcp"] = dict(enabled = "false", port = "domain,953", protocol = "tcp", filter = "named-refused", logpath = ["/var/log/named/security.log"])

[trigger.restart-fail2ban]
files += "/etc/fail2ban/*.conf"
command = ["invoke-rc.d", "fail2ban", "restart"]
